{% set name = "clad" %}
{% set version = "1.3" %}
{% set build_number = 0 %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/vgvassilev/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: 8a2dddef4339639e0e9cbe9ec89a0a2c57e98380e8c1072475d7f1a3551fba3a
  patches:
    - patches/clad-git-only-on-benchmark.patch
  folder: source

build:
  skip: True  # [win]
  skip: True  # [linux and (clangdev in ("7.*", "8.*"))]
  skip: True  # [osx and (clangdev in ("7.*", "8.*", "9.*", "10.*", "11.*", "12.*"))]
  number: {{ build_number }}
  string: clang{{ (clangdev or "None").split(".")[0] }}_h{{ PKG_HASH }}_{{ build_number }}

requirements:
  build:
    - cmake
    - make   # [unix]
    - ninja  # [win]
    - {{ compiler('cxx') }}  # [not (osx and clangdev == "5.*")]
    # HACK: This should really be in conda_build_config.yaml but zip_keys makes it hard
    # - clangxx_osx-64 12  # [osx and clangdev == "5.*"]
    - sed    # [unix]
    # LLVM was split into multiple outputs as part of the 8.x update
    - llvm  # [llvmdev not in ("5.*", "6.*", "7.*")]
    - llvmdev
    - clangdev
    - libcxx {{ cxx_compiler_version }}  # [osx]
  host:
    - xz
    - zstd
  run:
    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("13.0") }}  # [osx]
  run_constrained:
    - cling ==9999999999  # [clangdev != "13.*"]
    - cling 0.9           # [clangdev == "13.*"]
    # For C++14/C++17 headers from GCC 9.5.0 cannot be parsed due to a missing commit:
    # https://github.com/gcc-mirror/gcc/commit/32bbf76e4345a7961445b86a7cfccffa8a287fc1
    #- gxx_linux-64 !=9.5.0  # [clangdev == "5.*"]

test:
  requires:   # [clangdev == "13.*" and not win]
    - jupyter_kernel_test  # [clangdev == "13.*" and not win]
    - xeus-cling          # [clangdev == "13.*" and not win]
    #- libcxx=12.0.1                  # [clangdev == "5.*" and osx]
  files:
    - $RECIPE_DIR/jupyter_Clad_kernel_test.py
  commands:
    - python $RECIPE_DIR/jupyter_Clad_kernel_test.py  # [clangdev == "5.*" and not win]
    - test -f $PREFIX/lib/clad${SHLIB_EXT}  # [unix]
    - test -f $PREFIX/lib/libcladDifferentiator.a  # [unix]
    - test -f $PREFIX/lib/libcladPlugin.a  # [unix]
    # - if not exist %LIBRARY_BIN%\\clad.dll exit 1  # [win]
    - if not exist %LIBRARY_LIB%\\cladDifferentiator.lib exit 1  # [win]
    - if not exist %LIBRARY_LIB%\\cladPlugin.lib exit 1  # [win]

about:
  home: https://github.com/vgvassilev/clad
  license: LGPL-2.0-or-later
  license_family: LGPL
  license_file: source/License.txt
  summary: clad -- automatic differentiation for C/C++
  description: |
    Clad enables automatic differentiation (AD) for C++. It is based on LLVM
    compiler infrastructure and is a plugin for Clang compiler.
  doc_url: https://github.com/vgvassilev/clad/blob/master/README.md
  dev_url: https://github.com/vgvassilev/clad/wiki

extra:
  recipe-maintainers:
    - vgvassilev
    - alexander-penev
    - oshadura
